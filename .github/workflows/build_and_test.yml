name: tests

env:
  version: 8.0.3

on:
  push:
    branches:
      - main
      - development
  pull_request:
    branches:
      - main
      - development

jobs:
  test-with-coverage:
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v2
      - name: Install dependencies (SCIPOptSuite)
        run: |
          wget --quiet --no-check-certificate https://github.com/scipopt/scip/releases/download/$(echo "v${{env.version}}" | tr -d '.')/SCIPOptSuite-${{ env.version }}-Linux-ubuntu.deb
          sudo apt-get update && sudo apt install -y ./SCIPOptSuite-${{ env.version }}-Linux-ubuntu.deb

      - name: Install tarpaulin
        run: cargo install cargo-tarpaulin
      - name: Run tests
        run: cargo tarpaulin --verbose --all --out Xml
      - name: Upload to codecov.io
        uses: codecov/codecov-action@v2
        with:
          fail_ci_if_error: true

  Linux-conda-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
    steps:
      - uses: actions/checkout@v2
      - uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: test
          allow-softlinks: true


      - name: Install dependencies (SCIPOptSuite)
        run: |
          conda install -y --prefix $CONDA/envs/test --channel conda-forge scip
          echo "LD_LIBRARY_PATH=$CONDA/envs/test/lib" >> "${GITHUB_ENV}"
          echo "CONDA_PREFIX=$CONDA/envs/test" >> "${GITHUB_ENV}"

      - name: Build
        run: |
          cargo build

      - name: Test
        run: |
          rustup toolchain install nightly  
          RUSTFLAGS=-Zsanitizer=leak cargo +nightly test --features raw

  # TODO: fix windows workflow 
  # Windows-test:
  #   env:
  #     SCIPOPTDIR: C:\scipoptdir
  #   runs-on: windows-latest
  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: Download dependencies (SCIPOptSuite)
  #       shell: powershell
  #       run: wget https://scipopt.org/download/release/SCIPOptSuite-${{ env.version }}-win64-VS15.exe -outfile scipopt-installer.exe

  #     - name: Install dependencies (SCIPOptSuite)
  #       shell: cmd
  #       run: scipopt-installer.exe /S /D=${{ env.SCIPOPTDIR }}

  #     - name: Build and test
  #       shell: powershell
  #       run: |
  #         $Env:SCIPOPTDIR = "${{ env.SCIPOPTDIR }}"
  #         cargo build
  #         cargo test

# TODO: move to scip-sys repo
#  MacOS-test:
#    runs-on: macos-latest
#    steps:
#      - uses: actions/checkout@v2
#
#      - name: Cache dependencies (SCIPOptSuite)
#        id: cache-scip
#        uses: actions/cache@v2
#        with:
#          path: |
#            ${{ runner.workspace }}/scipoptsuite
#            ~/Library/Caches/Homebrew/tbb--*
#            /usr/local/opt/tbb*
#            ~/Library/Caches/Homebrew/downloads/*--tbb-*
#            ~/Library/Caches/Homebrew/boost--*
#            /usr/local/opt/boost*
#            ~/Library/Caches/Homebrew/downloads/*--boost-*
#          key: ${{ runner.os }}-scipopt-${{ env.version }}-${{ hashFiles('**/lockfiles') }}
#          restore-keys: |
#            ${{ runner.os }}-scipopt-${{ env.version }}-
#
#      - name: Install dependencies (SCIPOptSuite)
#        if: steps.cache-scip.outputs.cache-hit != 'true'
#        run: |
#          brew install tbb boost bison
#          wget --quiet --no-check-certificate https://scipopt.org/download/release/scipoptsuite-${{ env.version }}.tgz
#          tar xfz scipoptsuite-${{ env.version }}.tgz
#          cd scipoptsuite-${{ env.version }}
#          mkdir build
#          cd build
#          cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_INSTALL_PREFIX=${{ runner.workspace }}/scipoptsuite -DIPOPT=off -DSYM=none -DTPI=tny -DREADLINE=off
#          make install -j
#
#      - name: Build and test
#        run: |
#          brew install tbb boost bison
#          export SCIPOPTDIR=${{ runner.workspace }}/scipoptsuite/
#          export DYLD_LIBRARY_PATH=${DYLD_LIBRARY_PATH}:${{ runner.workspace }}/scipoptsuite/lib
#          cargo build
#          cargo test
